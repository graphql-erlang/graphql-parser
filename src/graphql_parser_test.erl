-include_lib("eunit/include/eunit.hrl").

-module(graphql_parser_test).
-author("mrchex").

base_query1_test()->
  Q = <<"{ base }">>,
  AST = graphql_parser:parse(Q),

  ExpectedAST = #{<<"definitions">> => [#{<<"directives">> => null,
    <<"kind">> => <<"OperationDefinition">>,
    <<"loc">> => #{<<"end">> => 9,<<"start">> => 1},
    <<"name">> => null,
    <<"operation">> => <<"query">>,
    <<"selectionSet">> => #{<<"kind">> => <<"SelectionSet">>,
      <<"loc">> => #{<<"end">> => 9,<<"start">> => 1},
      <<"selections">> => [#{<<"alias">> => null,
        <<"arguments">> => null,
        <<"directives">> => null,
        <<"kind">> => <<"Field">>,
        <<"loc">> => #{<<"end">> => 7,<<"start">> => 3},
        <<"name">> => #{<<"kind">> => <<"Name">>,
          <<"loc">> => #{<<"end">> => 7,<<"start">> => 3},
          <<"value">> => <<"base">>},
        <<"selectionSet">> => null}]},
    <<"variableDefinitions">> => null}],
    <<"kind">> => <<"Document">>,
    <<"loc">> => #{<<"end">> => 9,<<"start">> => 1}},

  ?assertEqual({ok, ExpectedAST}, AST).

% same AST query1, but loc different
base_query2_test()->
  Q = <<"query { base }">>,
  AST = graphql_parser:parse(Q),

  ExpectedAST = #{<<"definitions">> => [#{<<"directives">> => null,
    <<"kind">> => <<"OperationDefinition">>,
    <<"loc">> => #{<<"end">> => 15,<<"start">> => 1},
    <<"name">> => null,
    <<"operation">> => <<"query">>,
    <<"selectionSet">> => #{<<"kind">> => <<"SelectionSet">>,
      <<"loc">> => #{<<"end">> => 15,<<"start">> => 7},
      <<"selections">> => [#{<<"alias">> => null,
        <<"arguments">> => null,
        <<"directives">> => null,
        <<"kind">> => <<"Field">>,
        <<"loc">> => #{<<"end">> => 13,<<"start">> => 9},
        <<"name">> => #{<<"kind">> => <<"Name">>,
          <<"loc">> => #{<<"end">> => 13,<<"start">> => 9},
          <<"value">> => <<"base">>},
        <<"selectionSet">> => null}]},
    <<"variableDefinitions">> => null}],
    <<"kind">> => <<"Document">>,
    <<"loc">> => #{<<"end">> => 15,<<"start">> => 1}},

  ?assertEqual({ok, ExpectedAST}, AST).

argument_all_scalars_types_test()->
  Q = <<"{ test(a:1 b: 1.2 c: ENUMVALUE d: \"string value\" d: true e: false ) }">>,
  AST = graphql_parser:parse(Q),

  ExpectedAST = #{<<"definitions">> => [#{<<"directives">> => null,
    <<"kind">> => <<"OperationDefinition">>,
    <<"loc">> => #{<<"end">> => 82,<<"start">> => 1},
    <<"name">> => null,
    <<"operation">> => <<"query">>,
    <<"selectionSet">> => #{<<"kind">> => <<"SelectionSet">>,
      <<"loc">> => #{<<"end">> => 82,<<"start">> => 1},
      <<"selections">> => [#{<<"alias">> => null,
        <<"arguments">> => [#{<<"kind">> => <<"Argument">>,
          <<"loc">> => #{<<"end">> => 11,<<"start">> => 8},
          <<"name">> => #{<<"kind">> => <<"Name">>,
            <<"loc">> => #{<<"end">> => 9,<<"start">> => 8},
            <<"value">> => <<"a">>},
          <<"value">> => #{<<"kind">> => <<"IntValue">>,
            <<"loc">> => #{<<"end">> => 11,<<"start">> => 10},
            <<"value">> => <<"1">>}},
          #{<<"kind">> => <<"Argument">>,
            <<"loc">> => #{<<"end">> => 18,<<"start">> => 12},
            <<"name">> => #{<<"kind">> => <<"Name">>,
              <<"loc">> => #{<<"end">> => 13,<<"start">> => 12},
              <<"value">> => <<"b">>},
            <<"value">> => #{<<"kind">> => <<"FloatValue">>,
              <<"loc">> => #{<<"end">> => 18,<<"start">> => 15},
              <<"value">> => <<"1.2">>}},
          #{<<"kind">> => <<"Argument">>,
            <<"loc">> => #{<<"end">> => 31,<<"start">> => 19},
            <<"name">> => #{<<"kind">> => <<"Name">>,
              <<"loc">> => #{<<"end">> => 20,<<"start">> => 19},
              <<"value">> => <<"c">>},
            <<"value">> => #{<<"kind">> => <<"EnumValue">>,
              <<"loc">> => #{<<"end">> => 31,<<"start">> => 22},
              <<"value">> => <<"ENUMVALUE">>}},
          #{<<"kind">> => <<"Argument">>,
            <<"loc">> => #{<<"end">> => 34,<<"start">> => 32},
            <<"name">> => #{<<"kind">> => <<"Name">>,
              <<"loc">> => #{<<"end">> => 33,<<"start">> => 32},
              <<"value">> => <<"d">>},
            <<"value">> => #{<<"kind">> => <<"StringValue">>,
              <<"loc">> => #{<<"end">> => 34,<<"start">> => 33},
              <<"value">> => <<"string value">>}},
          #{<<"kind">> => <<"Argument">>,
            <<"loc">> => #{<<"end">> => 69,<<"start">> => 62},
            <<"name">> => #{<<"kind">> => <<"Name">>,
              <<"loc">> => #{<<"end">> => 63,<<"start">> => 62},
              <<"value">> => <<"d">>},
            <<"value">> => #{<<"kind">> => <<"BooleanValue">>,
              <<"loc">> => #{<<"end">> => 69,<<"start">> => 65},
              <<"value">> => true}},
          #{<<"kind">> => <<"Argument">>,
            <<"loc">> => #{<<"end">> => 78,<<"start">> => 70},
            <<"name">> => #{<<"kind">> => <<"Name">>,
              <<"loc">> => #{<<"end">> => 71,<<"start">> => 70},
              <<"value">> => <<"e">>},
            <<"value">> => #{<<"kind">> => <<"BooleanValue">>,
              <<"loc">> => #{<<"end">> => 78,<<"start">> => 73},
              <<"value">> => false}}],
        <<"directives">> => null,
        <<"kind">> => <<"Field">>,
        <<"loc">> => #{<<"end">> => 80,<<"start">> => 3},
        <<"name">> => #{<<"kind">> => <<"Name">>,
          <<"loc">> => #{<<"end">> => 7,<<"start">> => 3},
          <<"value">> => <<"test">>},
        <<"selectionSet">> => null}]},
    <<"variableDefinitions">> => null}],
    <<"kind">> => <<"Document">>,
    <<"loc">> => #{<<"end">> => 82,<<"start">> => 1}},

  ?assertEqual({ok, ExpectedAST}, AST).

variable_definition_test() ->
  Q = <<"query($a: NullableType $b: NonNullType! = 1) { foo(z: $a w: $b) }">>,
  AST = graphql_parser:parse(Q),

  ExpectedAST = #{<<"definitions">> => [#{<<"directives">> => null,
    <<"kind">> => <<"OperationDefinition">>,
    <<"loc">> => #{<<"end">> => 66,<<"start">> => 1},
    <<"name">> => null,
    <<"operation">> => <<"query">>,
    <<"selectionSet">> => #{<<"kind">> => <<"SelectionSet">>,
      <<"loc">> => #{<<"end">> => 66,<<"start">> => 46},
      <<"selections">> => [#{<<"alias">> => null,
        <<"arguments">> => [#{<<"kind">> => <<"Argument">>,
          <<"loc">> => #{<<"end">> => 57,<<"start">> => 52},
          <<"name">> => #{<<"kind">> => <<"Name">>,
            <<"loc">> => #{<<"end">> => 53,<<"start">> => 52},
            <<"value">> => <<"z">>},
          <<"value">> => #{<<"kind">> => <<"Variable">>,
            <<"loc">> => #{<<"end">> => 57,<<"start">> => 55},
            <<"name">> => #{<<"kind">> => <<"Name">>,
              <<"loc">> => #{<<"end">> => 57,<<"start">> => 55},
              <<"value">> => <<"a">>}}},
          #{<<"kind">> => <<"Argument">>,
            <<"loc">> => #{<<"end">> => 63,<<"start">> => 58},
            <<"name">> => #{<<"kind">> => <<"Name">>,
              <<"loc">> => #{<<"end">> => 59,<<"start">> => 58},
              <<"value">> => <<"w">>},
            <<"value">> => #{<<"kind">> => <<"Variable">>,
              <<"loc">> => #{<<"end">> => 63,<<"start">> => 61},
              <<"name">> => #{<<"kind">> => <<"Name">>,
                <<"loc">> => #{<<"end">> => 63,<<"start">> => 61},
                <<"value">> => <<"b">>}}}],
        <<"directives">> => null,
        <<"kind">> => <<"Field">>,
        <<"loc">> => #{<<"end">> => 64,<<"start">> => 48},
        <<"name">> => #{<<"kind">> => <<"Name">>,
          <<"loc">> => #{<<"end">> => 51,<<"start">> => 48},
          <<"value">> => <<"foo">>},
        <<"selectionSet">> => null}]},
    <<"variableDefinitions">> => [#{<<"defaultValue">> => null,
      <<"kind">> => <<"VariableDefinition">>,
      <<"loc">> => #{<<"end">> => 23,<<"start">> => 7},
      <<"type">> => #{<<"kind">> => <<"NamedType">>,
        <<"loc">> => #{<<"end">> => 23,<<"start">> => 11},
        <<"name">> => #{<<"kind">> => <<"Name">>,
          <<"loc">> => #{<<"end">> => 23,<<"start">> => 11},
          <<"value">> => <<"NullableType">>}},
      <<"variable">> => #{<<"kind">> => <<"Variable">>,
        <<"loc">> => #{<<"end">> => 9,<<"start">> => 7},
        <<"name">> => #{<<"kind">> => <<"Name">>,
          <<"loc">> => #{<<"end">> => 9,<<"start">> => 7},
          <<"value">> => <<"a">>}}},
      #{<<"defaultValue">> => #{<<"kind">> => <<"IntValue">>,
        <<"loc">> => #{<<"end">> => 44,<<"start">> => 43},
        <<"value">> => <<"1">>},
        <<"kind">> => <<"VariableDefinition">>,
        <<"loc">> => #{<<"end">> => 44,<<"start">> => 24},
        <<"type">> => #{<<"kind">> => <<"NonNullType">>,
          <<"loc">> => #{<<"end">> => 40,<<"start">> => 28},
          <<"type">> => #{<<"kind">> => <<"NamedType">>,
            <<"loc">> => #{<<"end">> => 39,<<"start">> => 28},
            <<"name">> => #{<<"kind">> => <<"Name">>,
              <<"loc">> => #{<<"end">> => 39,<<"start">> => 28},
              <<"value">> => <<"NonNullType">>}}},
        <<"variable">> => #{<<"kind">> => <<"Variable">>,
          <<"loc">> => #{<<"end">> => 26,<<"start">> => 24},
          <<"name">> => #{<<"kind">> => <<"Name">>,
            <<"loc">> => #{<<"end">> => 26,<<"start">> => 24},
            <<"value">> => <<"b">>}}}]}],
    <<"kind">> => <<"Document">>,
    <<"loc">> => #{<<"end">> => 66,<<"start">> => 1}},

  ?assertEqual({ok, ExpectedAST}, AST).


directives_test() ->
  Q = <<"{foo @someDirective(when: false)}">>,
  AST = graphql_parser:parse(Q),

  ExpectedAST = #{<<"definitions">> => [#{<<"directives">> => null,
    <<"kind">> => <<"OperationDefinition">>,
    <<"loc">> => #{<<"end">> => 34,<<"start">> => 1},
    <<"name">> => null,
    <<"operation">> => <<"query">>,
    <<"selectionSet">> => #{<<"kind">> => <<"SelectionSet">>,
      <<"loc">> => #{<<"end">> => 34,<<"start">> => 1},
      <<"selections">> => [#{<<"alias">> => null,
        <<"arguments">> => null,
        <<"directives">> => [#{<<"arguments">> => [#{<<"kind">> => <<"Argument">>,
          <<"loc">> => #{<<"end">> => 32,<<"start">> => 21},
          <<"name">> => #{<<"kind">> => <<"Name">>,
            <<"loc">> => #{<<"end">> => 25,<<"start">> => 21},
            <<"value">> => <<"when">>},
          <<"value">> => #{<<"kind">> => <<"BooleanValue">>,
            <<"loc">> => #{<<"end">> => 32,<<"start">> => 27},
            <<"value">> => false}}],
          <<"kind">> => <<"Directive">>,
          <<"loc">> => #{<<"end">> => 33,<<"start">> => 6},
          <<"name">> => #{<<"kind">> => <<"Name">>,
            <<"loc">> => #{<<"end">> => 20,<<"start">> => 7},
            <<"value">> => <<"someDirective">>}}],
        <<"kind">> => <<"Field">>,
        <<"loc">> => #{<<"end">> => 33,<<"start">> => 2},
        <<"name">> => #{<<"kind">> => <<"Name">>,
          <<"loc">> => #{<<"end">> => 5,<<"start">> => 2},
          <<"value">> => <<"foo">>},
        <<"selectionSet">> => null}]},
    <<"variableDefinitions">> => null}],
    <<"kind">> => <<"Document">>,
    <<"loc">> => #{<<"end">> => 34,<<"start">> => 1}},

  ?assertEqual({ok, ExpectedAST}, AST).


fragments_test()->
  Q = <<"query withFragments {
      user {
        friends { ...friendFields }
        mutualFriends { ...friendFields }
      }
    }

    fragment friendFields on User {
      id
    }">>,

  AST = graphql_parser:parse(Q),

  ExpectedAST = #{<<"definitions">> => [#{<<"directives">> => null,
    <<"kind">> => <<"OperationDefinition">>,
    <<"loc">> => #{<<"end">> => 6,<<"start">> => 1},
    <<"name">> => #{<<"kind">> => <<"Name">>,
      <<"loc">> => #{<<"end">> => 20,<<"start">> => 7},
      <<"value">> => <<"withFragments">>},
    <<"operation">> => <<"query">>,
    <<"selectionSet">> => #{<<"kind">> => <<"SelectionSet">>,
      <<"loc">> => #{<<"end">> => 6,<<"start">> => 21},
      <<"selections">> => [#{<<"alias">> => null,
        <<"arguments">> => null,
        <<"directives">> => null,
        <<"kind">> => <<"Field">>,
        <<"loc">> => #{<<"end">> => 8,<<"start">> => 7},
        <<"name">> => #{<<"kind">> => <<"Name">>,
          <<"loc">> => #{<<"end">> => 11,<<"start">> => 7},
          <<"value">> => <<"user">>},
        <<"selectionSet">> => #{<<"kind">> => <<"SelectionSet">>,
          <<"loc">> => #{<<"end">> => 8,<<"start">> => 12},
          <<"selections">> => [#{<<"alias">> => null,
            <<"arguments">> => null,
            <<"directives">> => null,
            <<"kind">> => <<"Field">>,
            <<"loc">> => #{<<"end">> => 36,<<"start">> => 9},
            <<"name">> => #{<<"kind">> => <<"Name">>,
              <<"loc">> => #{<<"end">> => 16,<<"start">> => 9},
              <<"value">> => <<"friends">>},
            <<"selectionSet">> => #{<<"kind">> => <<"SelectionSet">>,
              <<"loc">> => #{<<"end">> => 36,<<"start">> => 17},
              <<"selections">> => [#{<<"directives">> => null,
                <<"kind">> => <<"FragmentSpread">>,
                <<"loc">> => #{<<"end">> => 34,<<"start">> => 19},
                <<"name">> => #{<<"kind">> => <<"Name">>,
                  <<"loc">> => #{<<"end">> => 34,<<"start">> => 22},
                  <<"value">> => <<"friendFields">>}}]}},
            #{<<"alias">> => null,
              <<"arguments">> => null,
              <<"directives">> => null,
              <<"kind">> => <<"Field">>,
              <<"loc">> => #{<<"end">> => 42,<<"start">> => 9},
              <<"name">> => #{<<"kind">> => <<"Name">>,
                <<"loc">> => #{<<"end">> => 22,<<"start">> => 9},
                <<"value">> => <<"mutualFriends">>},
              <<"selectionSet">> => #{<<"kind">> => <<"SelectionSet">>,
                <<"loc">> => #{<<"end">> => 42,<<"start">> => 23},
                <<"selections">> => [#{<<"directives">> => null,
                  <<"kind">> => <<"FragmentSpread">>,
                  <<"loc">> => #{<<"end">> => 40,<<"start">> => 25},
                  <<"name">> => #{<<"kind">> => <<"Name">>,
                    <<"loc">> => #{<<"end">> => 40,<<"start">> => 28},
                    <<"value">> => <<"friendFields">>}}]}}]}}]},
    <<"variableDefinitions">> => null},
    #{<<"directives">> => null,
      <<"kind">> => <<"FragmentDefinition">>,
      <<"loc">> => #{<<"end">> => 6,<<"start">> => 5},
      <<"name">> => #{<<"kind">> => <<"Name">>,
        <<"loc">> => #{<<"end">> => 26,<<"start">> => 14},
        <<"value">> => <<"friendFields">>},
      <<"selectionSet">> => #{<<"kind">> => <<"SelectionSet">>,
        <<"loc">> => #{<<"end">> => 6,<<"start">> => 35},
        <<"selections">> => [#{<<"alias">> => null,
          <<"arguments">> => null,
          <<"directives">> => null,
          <<"kind">> => <<"Field">>,
          <<"loc">> => #{<<"end">> => 9,<<"start">> => 7},
          <<"name">> => #{<<"kind">> => <<"Name">>,
            <<"loc">> => #{<<"end">> => 9,<<"start">> => 7},
            <<"value">> => <<"id">>},
          <<"selectionSet">> => null}]},
      <<"typeCondition">> => #{<<"kind">> => <<"NamedType">>,
        <<"loc">> => #{<<"end">> => 34,<<"start">> => 30},
        <<"name">> => #{<<"kind">> => <<"Name">>,
          <<"loc">> => #{<<"end">> => 34,<<"start">> => 30},
          <<"value">> => <<"User">>}}}],
    <<"kind">> => <<"Document">>,
    <<"loc">> => #{<<"end">> => 6,<<"start">> => 1}},
  
  ?assertEqual({ok, ExpectedAST}, AST).
